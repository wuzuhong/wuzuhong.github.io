function getBlog(){
	return blog = {"content": "# 【kubernetes】Ingress和IngressController资源\nIngressController独立运行的一个或一组pod资源，通常就是一个拥有七层反向代理能力和转发能力的应用程序，其需要Ingress做支持；Ingress资源是结合service资源来工作的，它将service收集到的pod网络ip定义成upstream server，并把这些信息反映在Ingress当中，然后由Ingress动态注入到IngressController当中，也就是说pod变化了，service就变化，Ingress也随之变化并注入到IngressController当中。\n\n![Ingress和IngressController](./images/kubernetes-ingress-and-ingressController.png)\n\n首先由外部的负载均衡器（externalLB）将请求转发到一个NodePort类型的service上来（这个service是可选的，如果不用这个service的话，可以将IngressController定义成共享节点网络名称空间的DaemonSet来控制，并运行在特定节点上，注意，这里是特定节点，而不是所有集群节点），然后由这个service将请求转发至IngressController，然后IngressController根据Ingress中的定义将请求转发至ClusterIP类型的service资源上，最后再转发至pod中。\n\n当Ingress资源创建成功后，Ingress会将信息自动注入到IngressController中；之后在物理机的浏览器中通过tomcat.xiaowu.com域名加上名为ingress-nginx的service所暴露的随机端口就能访问集群内的tomcat了，注意要在物理机的hosts文件中配置域名映射，可映射到集群的任意节点。", "title": "【kubernetes】Ingress和IngressController资源"}
}