function getBlog(){
	return blog = {"content": "# 【微服务—kong】在使用kong时遇到的问题\n## 第一个问题\n### 问题\n用docker或kubernetes部署kong1.0或kong0.14之后，起不来，docker的话就是直接退出，kubernetes的话就是不断重启，并且没有任何启动日志输出。但是使用kong0.10却没有任何问题。\n\n### 原因\n这是因为kong1.0或kong0.14基于的openresty版本不能在AMD的cpu上运行，只能在Intel的cpu上运行，kong1.0或kong0.14基于的openresty版本和kong0.10基于的openresty版本不一样，kong0.10基于的openresty版本更低，其可以既可以在AMD的cpu上运行，也可以在Intel的cpu上运行。\n\n### 解决方案\n* 第一种方案：可以更换一台cpu是Intel的服务器来部署kong\n* 第二种方案：在cpu是AMD的服务器上从源码层开始从新编译kong\n\n## 第二个问题\n### 问题\n在通过kong0.14的服务端口（8000）去调用服务时，有时候请求会出现 failure to get a peer from the ring-balancer的错误。\n\n### 原因\n这是因为kong0.14的没有正确的设置健康检查，不管是开启还是关闭kong0.14的健康检查，都要保证upstream中健康检查字段有值，不能为null，默认的就是关闭健康检查，因此若不想启用健康检查，可以填写其默认值，就是不能为null就可以了。\n\n## 第三个问题\n### 问题\n在使用kong0.14为某一个route添加插件时，该插件不生效。\n\n### 原因\n这是因为kong0.14的plugin中api字段，而且这个route对应的plugin的api字段上也有值，把这个route对应的plugin的api字段设置为null即可。一般来说，在kong0.14中所有plugin的api字段都要设置为null", "title": "【微服务—kong】在使用kong时遇到的问题"}
}