function getAllBlogs(){
	return blogs = [
		{"tag": "【springboot】", "title": "【springboot】配置类", "path": "./blogs/springboot/springboot-configuration class.js"},
		{"tag": "【springboot】", "title": "【springboot】使用Spring来加载工程下所有jar包下的指定资源", "path": "./blogs/springboot/get all classpath resources.js"},
		{"tag": "【springboot】", "title": "【springboot】使用事务注解 @Transactional 是否会生效的问题", "path": "./blogs/springboot/Transactional In Spring.js"},
		{"tag": "【springboot】", "title": "【springboot】SpringBoot底层原理", "path": "./blogs/springboot/springboot startup.js"},
		{"tag": "【springboot】", "title": "【springboot】整合swagger", "path": "./blogs/springboot/springboot-swagger.js"},
		{"tag": "【springboot】", "title": "【springboot】Spring的两大特性： aop 和 ioc", "path": "./blogs/springboot/AOP and IOC.js"},
		{"tag": "【springboot】", "title": "【springboot】使用DeferredResult实现相应的异步生成返回值的功能", "path": "./blogs/springboot/spring-DeferredResult .js"},
		{"tag": "【springboot】", "title": "【springboot】异常处理", "path": "./blogs/springboot/springboot-exception.js"},
		{"tag": "【springboot】", "title": "【springboot】如何向 SpringBoot 中添加自定义的配置源", "path": "./blogs/springboot/how to add propertysource in springboot.js"},
		{"tag": "【springboot】", "title": "【springboot】starter启动器", "path": "./blogs/springboot/springboot-starter.js"},
		{"tag": "【springboot】", "title": "【springboot】全局配置文件", "path": "./blogs/springboot/springboot-gloable configuration file.js"},
		{"tag": "【springboot】", "title": "【springboot】SpringBoot中的各类监听器", "path": "./blogs/springboot/Listeners In SpringBoot.js"},
		{"tag": "【springboot】", "title": "【springboot】HelloWorld", "path": "./blogs/springboot/springboot-helloworld.js"},
		{"tag": "【springboot】", "title": "【springboot】整合MyBatis-Plus", "path": "./blogs/springboot/springboot-mybatis.js"},
		{"tag": "【springboot】", "title": "【springboot】拦截器", "path": "./blogs/springboot/springboot-interceptor.js"},
		{"tag": "【微服务—SpringCloudAlibaba】", "title": "【微服务—SpringCloudAlibaba】Nacos 配置中心和 Nacos 注册中心", "path": "./blogs/springcloud/springcloud-config.js"},
		{"tag": "【微服务—SpringCloudAlibaba】", "title": "【微服务—SpringCloudAlibaba】Sentinel 流控中心", "path": "./blogs/springcloud/springcloud-sentinel.js"},
		{"tag": "【微服务—SpringCloudAlibaba】", "title": "【微服务—SpringCloudAlibaba】微服务架构", "path": "./blogs/springcloud/springcloud-microservice.js"},
		{"tag": "【密码技术】", "title": "【密码技术】CA证书与SSL证书", "path": "./blogs/crypto/ca and ssl.js"},
		{"tag": "【mybatis】", "title": "【mybatis】mybatis的流式查询", "path": "./blogs/mybatis/mybatis stream query.js"},
		{"tag": "【Redis-5.0】", "title": "【Redis-5.0】持久化", "path": "./blogs/redis/redis persistence.js"},
		{"tag": "【Redis-5.0】", "title": "【Redis-5.0】内存淘汰策略", "path": "./blogs/redis/redis memory del strategy.js"},
		{"tag": "【Redis-5.0】", "title": "【Redis-5.0】常用命令", "path": "./blogs/redis/redis common cmd.js"},
		{"tag": "【Redis-5.0】", "title": "【Redis-5.0】客户端使用方式", "path": "./blogs/redis/redis client.js"},
		{"tag": "【Redis-5.0】", "title": "【Redis-5.0】事务和脚本", "path": "./blogs/redis/redis transaction and script.js"},
		{"tag": "【Redis-5.0】", "title": "【Redis-5.0】管道", "path": "./blogs/redis/redis pipeline.js"},
		{"tag": "【Redis-5.0】", "title": "【Redis-5.0】简介及其数据类型", "path": "./blogs/redis/redis data type.js"},
		{"tag": "【Redis-5.0】", "title": "【Redis-5.0】高可用", "path": "./blogs/redis/redis high avaliability.js"},
		{"tag": "【Redis-5.0】", "title": "【Redis-5.0】分布式锁", "path": "./blogs/redis/redis distributed lock.js"},
		{"tag": "【Redis-5.0】", "title": "【Redis-5.0】发布/订阅", "path": "./blogs/redis/redis publish and subscript.js"},
		{"tag": "【web安全】", "title": "【web安全】xss攻击与防御", "path": "./blogs/websecure/xss attacks and defenses.js"},
		{"tag": "【微服务—分布式事务解决方案】", "title": "【微服务—分布式事务解决方案】Seata中的AT模式", "path": "./blogs/distributed-transaction/seata at.js"},
		{"tag": "【微服务—分布式事务解决方案】", "title": "【微服务—分布式事务解决方案】基于消息的最终一致性方案", "path": "./blogs/distributed-transaction/distribute transaction-mq.js"},
		{"tag": "【微服务—分布式事务解决方案】", "title": "【微服务—分布式事务解决方案】TCC方案", "path": "./blogs/distributed-transaction/distribute transaction2 tcc.js"},
		{"tag": "【微服务—分布式事务解决方案】", "title": "【微服务—分布式事务解决方案】基于XA协议的两阶段提交方案", "path": "./blogs/distributed-transaction/distribute transaction1-xa.js"},
		{"tag": "【Vitess】", "title": "【Vitess】vitess相关操作的详细说明", "path": "./blogs/vitess/detail operation in vitess.js"},
		{"tag": "【Vitess】", "title": "【Vitess】vitess中不支持的sql类型", "path": "./blogs/vitess/unsupported sql in vitess.js"},
		{"tag": "【Vitess】", "title": "【Vitess】在k8s中使用chart部署vitess", "path": "./blogs/vitess/deploy vitess in k8s using chart.js"},
		{"tag": "【Vitess】", "title": "【Vitess】用户指南之备份和恢复数据", "path": "./blogs/vitess/user guide - backing up and restoring data.js"},
		{"tag": "【Vitess】", "title": "【Vitess】数据传输安全模型", "path": "./blogs/vitess/user guide - Transport Security Model.js"},
		{"tag": "【Vitess】", "title": "【Vitess】用户指南之Topology服务", "path": "./blogs/vitess/user guide - topology service.js"},
		{"tag": "【Vitess】", "title": "【Vitess】vitess的架构及其核心概念", "path": "./blogs/vitess/architecture and concepts.js"},
		{"tag": "【Vitess】", "title": "【Vitess】用户指南之VTTablet模型", "path": "./blogs/vitess/user guide - vttablet modes.js"},
		{"tag": "【Vitess】", "title": "【Vitess】用户指南之VTExplain", "path": "./blogs/vitess/user guide - vtexplain.js"},
		{"tag": "【Vitess】", "title": "【Vitess】通过http请求对vitess中的所有资源对象进行增删改查", "path": "./blogs/vitess/vitess http operating.js"},
		{"tag": "【Vitess】", "title": "【Vitess】用户指南之Reparenting", "path": "./blogs/vitess/user guide - reparenting.js"},
		{"tag": "【Vitess】", "title": "【Vitess】什么是vitess，为什么需要vitess", "path": "./blogs/vitess/what is vitess,why vitess.js"},
		{"tag": "【认证、授权和鉴权】", "title": "【认证、授权和鉴权】OAuth 2.0", "path": "./blogs/oauth2/oauth2.js"},
		{"tag": "【微服务—kong】", "title": "【微服务—kong】自定义插件", "path": "./blogs/kong/kong-plugin.js"},
		{"tag": "【微服务—kong】", "title": "【微服务—kong】负载均衡及健康检查", "path": "./blogs/kong/kong-loadbalance and healthcheck.js"},
		{"tag": "【微服务—kong】", "title": "【微服务—kong】反向代理", "path": "./blogs/kong/kong-proxy.js"},
		{"tag": "【微服务—kong】", "title": "【微服务—kong】配置kong", "path": "./blogs/kong/kong-configuration.js"},
		{"tag": "【微服务—kong】", "title": "【微服务—kong】kong集群", "path": "./blogs/kong/kong-cluster.js"},
		{"tag": "【微服务—kong】", "title": "【微服务—kong】kong是什么", "path": "./blogs/kong/kong-what is kong.js"},
		{"tag": "【微服务—kong】", "title": "【微服务—kong】在使用kong时遇到的问题", "path": "./blogs/kong/kong-bugfix.js"},
		{"tag": "【jvm详解】", "title": "【jvm详解】基本原理", "path": "./blogs/jvm/jvm lifecycle.js"},
		{"tag": "【jvm详解】", "title": "【jvm详解】执行引擎", "path": "./blogs/jvm/jvm excution engine.js"},
		{"tag": "【jvm详解】", "title": "【jvm详解】类加载器", "path": "./blogs/jvm/jvm classloader.js"},
		{"tag": "【jvm详解】", "title": "【jvm详解】垃圾回收", "path": "./blogs/jvm/jvm cash resycle.js"},
		{"tag": "【jvm详解】", "title": "【jvm详解】性能调优", "path": "./blogs/jvm/jvm adjust and optimize.js"},
		{"tag": "【jvm详解】", "title": "【jvm详解】内存区域", "path": "./blogs/jvm/jvm memory.js"},
		{"tag": "【其他】", "title": "【其他】Tomcat-8.5.73 在 windows 上运行乱码问题修复", "path": "./blogs/others/tomcat messy code on windows.js"},
		{"tag": "【其他】", "title": "【其他】MySQL数据库的当前连接数超过了应用的数据库连接池的最大连接数", "path": "./blogs/others/datasource connection pool bug.js"},
		{"tag": "【其他】", "title": "【其他】数据库表中同时存在id和code两个唯一字段的好处", "path": "./blogs/others/code is useful.js"},
		{"tag": "【java基础】", "title": "【java基础】== 和 equals 的区别", "path": "./blogs/java/dengdeng and equals.js"},
		{"tag": "【java基础】", "title": "【java基础】Java中创建对象的方式", "path": "./blogs/java/the ways to new object.js"},
		{"tag": "【java基础】", "title": "【java基础】Java中只有值传递", "path": "./blogs/java/value deliverty in java.js"},
		{"tag": "【java基础】", "title": "【java基础】重载和重写的区别", "path": "./blogs/java/overwrite and overload.js"},
		{"tag": "【java基础】", "title": "【java基础】深拷贝和浅拷贝的区别", "path": "./blogs/java/shallow clone and deep clone.js"},
		{"tag": "【java基础】", "title": "【java基础】hashCode 与 equals", "path": "./blogs/java/hashCode and equals.js"},
		{"tag": "【java基础】", "title": "【java基础】Java注解", "path": "./blogs/java/java annotation.js"},
		{"tag": "【java基础】", "title": "【java基础】Java泛型", "path": "./blogs/java/generic-types.js"},
		{"tag": "【设计模式】", "title": "【设计模式】模板方法模式", "path": "./blogs/design-patterns/template.js"},
		{"tag": "【设计模式】", "title": "【设计模式】单例模式", "path": "./blogs/design-patterns/singleton.js"},
		{"tag": "【设计模式】", "title": "【设计模式】建造者模式", "path": "./blogs/design-patterns/builder.js"},
		{"tag": "【设计模式】", "title": "【设计模式】观察者模式", "path": "./blogs/design-patterns/observer.js"},
		{"tag": "【设计模式】", "title": "【设计模式】设计模式的三个分类", "path": "./blogs/design-patterns/design pattern catalog.js"},
		{"tag": "【设计模式】", "title": "【设计模式】策略模式", "path": "./blogs/design-patterns/strategy.js"},
		{"tag": "【设计模式】", "title": "【设计模式】工厂方法模式和抽象工厂模式", "path": "./blogs/design-patterns/factory.js"},
		{"tag": "【设计模式】", "title": "【设计模式】委派模式", "path": "./blogs/design-patterns/delegate.js"},
		{"tag": "【设计模式】", "title": "【设计模式】装饰模式", "path": "./blogs/design-patterns/decorator.js"},
		{"tag": "【设计模式】", "title": "【设计模式】适配器模式", "path": "./blogs/design-patterns/adapter.js"},
		{"tag": "【设计模式】", "title": "【设计模式】代理模式", "path": "./blogs/design-patterns/proxy.js"},
		{"tag": "【java并发编程】", "title": "【java并发编程】java原生的并发编程方式", "path": "./blogs/concurrency/concurrent programming in java.js"},
		{"tag": "【java并发编程】", "title": "【java并发编程】Reactor响应式编程", "path": "./blogs/concurrency/reactor.js"},
		{"tag": "【java并发编程】", "title": "【java并发编程】Stream流", "path": "./blogs/concurrency/stream.js"},
		{"tag": "【java并发编程】", "title": "【java并发编程】实现简单的线程池", "path": "./blogs/concurrency/cutom simple thread pool.js"},
		{"tag": "【graphql】", "title": "【graphql】概述", "path": "./blogs/graphql/graphql-started.js"},
		{"tag": "【mysql】", "title": "【mysql】锁类型", "path": "./blogs/mysql/mysql-lock-type.js"},
		{"tag": "【mysql】", "title": "【mysql】幂等性", "path": "./blogs/mysql/mysql-mi-deng-xing.js"},
		{"tag": "【mysql】", "title": "【mysql】乐观锁和悲观锁", "path": "./blogs/mysql/mysql-pessimistic-lock-and-optimistic-lock.js"},
		{"tag": "【mysql】", "title": "【mysql】函数与存储过程", "path": "./blogs/mysql/mysql-function-and-procedure.js"},
		{"tag": "【mysql】", "title": "【mysql】通过左右值编码来实现树查询", "path": "./blogs/mysql/mysql-tree-query2.js"},
		{"tag": "【mysql】", "title": "【mysql】事务", "path": "./blogs/mysql/mysql-transaction.js"},
		{"tag": "【mysql】", "title": "【mysql】根据json类型的列中的某一个key来查询", "path": "./blogs/mysql/mysql-json-query.js"},
		{"tag": "【mysql】", "title": "【mysql】常用sql语句", "path": "./blogs/mysql/mysql-sql.js"},
		{"tag": "【mysql】", "title": "【mysql】触发器", "path": "./blogs/mysql/mysql-trigger.js"},
		{"tag": "【mysql】", "title": "【mysql】通过递归来实现树查询", "path": "./blogs/mysql/mysql-tree-query.js"},
		{"tag": "【流程引擎-Flowable】", "title": "【流程引擎-Flowable】Flowable使用示例", "path": "./blogs/flowable/Flowable Demo.js"},
		{"tag": "【prometheus】", "title": "【prometheus】Prometheus的alert产生过程和AlertManager告警处理流程", "path": "./blogs/prometheus/alertmanager-alert-period.js"},
		{"tag": "【SkyWalking】", "title": "【SkyWalking】基本概念", "path": "./blogs/skywalking/basic concept.js"},
		{"tag": "【SkyWalking】", "title": "【SkyWalking】探针 java agent", "path": "./blogs/skywalking/java agent.js"},
		{"tag": "【SkyWalking】", "title": "【SkyWalking】使用 Docker 来部署", "path": "./blogs/skywalking/deploy in docker.js"},
		{"tag": "【kubernetes】", "title": "【kubernetes】搭建单节点k8s", "path": "./blogs/kubernetes/kubernetes-deploy k8s cluster with single node.js"},
		{"tag": "【kubernetes】", "title": "【kubernetes】service资源", "path": "./blogs/kubernetes/kubernetes-service resource.js"},
		{"tag": "【kubernetes】", "title": "【kubernetes】Ingress和IngressController资源", "path": "./blogs/kubernetes/kubernetes-ingress and ingressController resource.js"},
		{"tag": "【kubernetes】", "title": "【kubernetes】基于Kubernetes的PaaS概述", "path": "./blogs/kubernetes/kubernetes-pass platform based on kubernetes.js"},
		{"tag": "【kubernetes】", "title": "【kubernetes】Devops核心要点及kubernetes架构概述", "path": "./blogs/kubernetes/kubernetes-Devops core and the core architecture of kubernetes.js"},
		{"tag": "【kubernetes】", "title": "【kubernetes】使用kubectl相关命令与Kubernetes集群进行交互", "path": "./blogs/kubernetes/kubernetes-kubectl.js"},
		{"tag": "【kubernetes】", "title": "【kubernetes】helm", "path": "./blogs/kubernetes/kubernetes-helm.js"},
		{"tag": "【kubernetes】", "title": "【kubernetes】pod资源", "path": "./blogs/kubernetes/kubernetes-pod resource.js"},
		{"tag": "【kubernetes】", "title": "【kubernetes】kubernetes中的资源", "path": "./blogs/kubernetes/kubernetes-resource.js"},
		{"tag": "【kubernetes】", "title": "【kubernetes】存储卷", "path": "./blogs/kubernetes/kubernetes-volume.js"},
		{"tag": "【kubernetes】", "title": "【kubernetes】pod控制器资源", "path": "./blogs/kubernetes/kubernetes-pod controller resource.js"},
		{"tag": "【服务编排-Conductor】", "title": "【服务编排-Conductor】使用示例", "path": "./blogs/conductor/usage demo.js"},
		{"tag": "【服务编排-Conductor】", "title": "【服务编排-Conductor】基本概念", "path": "./blogs/conductor/basic concept.js"},
		{"tag": "【服务编排-Conductor】", "title": "【服务编排-Conductor】系统内置的 Task", "path": "./blogs/conductor/system built-in task.js"},
		{"tag": "【服务编排-Conductor】", "title": "【服务编排-Conductor】Task 定义", "path": "./blogs/conductor/task definition.js"},
		{"tag": "【服务编排-Conductor】", "title": "【服务编排-Conductor】JSON Schema定义", "path": "./blogs/conductor/json schema.js"},
		{"tag": "【服务编排-Conductor】", "title": "【服务编排-Conductor】操作符 Operators", "path": "./blogs/conductor/operators.js"},
		{"tag": "【搜索引擎-Elasticsearch】", "title": "【搜索引擎-Elasticsearch】基于SpringBoot的使用示例", "path": "./blogs/elasticsearch/usage demo in springboot.js"},
		{"tag": "【搜索引擎-Elasticsearch】", "title": "【搜索引擎-Elasticsearch】基本概念", "path": "./blogs/elasticsearch/basic concept.js"},
		{"tag": "【搜索引擎-Elasticsearch】", "title": "【搜索引擎-Elasticsearch】使用 Docker 来部署", "path": "./blogs/elasticsearch/deploy in docker.js"},
		{"tag": "【搜索引擎-Elasticsearch】", "title": "【搜索引擎-Elasticsearch】集群机制", "path": "./blogs/elasticsearch/cluster mechanism.js"},
		{"tag": "【搜索引擎-Elasticsearch】", "title": "【搜索引擎-Elasticsearch】分词", "path": "./blogs/elasticsearch/text analyze.js"},
		{"tag": "【消息中间件-RocketMQ】", "title": "【消息中间件-RocketMQ】消息积压", "path": "./blogs/rocketmq/rocketmq-message-backlog.js"},
		{"tag": "【消息中间件-RocketMQ】", "title": "【消息中间件-RocketMQ】消费者", "path": "./blogs/rocketmq/rocketmq-consumer.js"},
		{"tag": "【消息中间件-RocketMQ】", "title": "【消息中间件-RocketMQ】基本概念", "path": "./blogs/rocketmq/rocketmq-basic.js"},
		{"tag": "【消息中间件-RocketMQ】", "title": "【消息中间件-RocketMQ】生产者", "path": "./blogs/rocketmq/rocketmq-producer.js"},
		{"tag": "【消息中间件-RocketMQ】", "title": "【消息中间件-RocketMQ】Docker 部署", "path": "./blogs/rocketmq/rocketmq-deploy.js"},
		{"tag": "【消息中间件-RocketMQ】", "title": "【消息中间件-RocketMQ】客户端的使用", "path": "./blogs/rocketmq/rocketmq-client.js"}
	]
}